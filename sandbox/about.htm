
<!doctype html>
<html>
  <head>
    <meta charset="UTF-8">
    <title>windows</title>

    <link href='http://fonts.googleapis.com/css?family=Overlock+SC|Oxygen:400,700' rel='stylesheet' type='text/css'>
    <link rel="stylesheet" href="css/about.css">
  </head>
  <body>

    <!-- NOTE: each "window" is a section element with class .window -->
    
    <section class="window">
      <div class="content" style="background:url(file:///C:/Users/edomke/Pictures/Backup/PostProcess/People/PortraitSquared_2048.jpg) 50% 0 no-repeat; background-size:cover;vertical-align:bottom">
        <h1>Eric Domke</h1>
        <p style="max-width:40%">I am a computer programmer trained as a mechanical engineer who enjoys communing with nature &mdash; often from the seat of a bike or behind the lens of a camera.</p>
      </div>
    </section>

    <section class="window">
      <div class="content" style="background:url(file:///C:/Users/edomke/Pictures/Backup/PostProcess/People/Disconnected_2048.jpg) 0 0% no-repeat;
                                  background-size:cover;
                                  vertical-align:top;
                                  color:white;
                                  padding-top:12%;">
        <h2>Open Source Projects</h2>
        <p>AML Studio</p>
        <p>Windows</p>
      </div>
    </section>
    
    <section class="window" style="height:30%">
      <div class="content">
        <h2>... or they can take up a small portion of the screen</h2>
      </div>
    </section>

    <section class="window" style="height:200%">
      <div class="content" style="width:50%">
        <h2>...</h2>
        <h2>or</h2>
        <h2>they</h2>
        <h2>can</h2>
        <h2>take</h2>
        <h2>up</h2>
        <h2>more</h2>
        <h2>than</h2>
        <h2>one</h2>
        <h2>screen</h2>
      </div>
      <div class="affix" style="width:50%;position:relative;top:200px">
        Fixed Sidebar
      </div>
    </section>
    
    <section class="window">
      <div class="content">
        <h2>instructions</h2>
        <h3>markup</h3>
        <p>use whatever markup you want, e.g.</p>
        <pre>
&lt;section class="window"&gt;
  Some content
&lt;/section&gt;
&lt;section class="window"&gt;
  Some more content
&lt;/section&gt;
        </pre>
      </div>
    </section>
    
    <section class="window">
      <div class="content">
        <h2>instructions <small>(cont.)</small></h2>
        <h3>configuration</h3>
        <p>use the appropriate selector to find your windows, and call the <code>windows()</code> method</p>
        <pre>
&lt;script src="jquery.js"&gt;&lt;/script&gt;
&lt;script src="jquery.windows.js"&gt;&lt;/script&gt;

&lt;script&gt;
<span class="comment">// Defaults:</span>
$('.window').windows({
  snapping: true,     <span class="comment">// [bool] turn on snapping</span>
  scrollSpeed: 500,   <span class="comment">// [int] how quickly to snap to a window (in millisecons)</span>
  scrollDelay: 1100,  <span class="comment">// [int] delay after scroll completes before snapping starts</span>
  enableKeys: true,   <span class="comment">// [bool] whether to allow keyboard shortcuts</span>
  easing: 'swing',    <span class="comment">// [string] easing animation</span>
                      <span class="comment">// (don't forget to add the easing plugin)</span>
  onScroll: function(scrollPos){
    <span class="comment">// after the window scrolls</span>
    <span class="comment">// scrollPos = [int] scrollTop value for the window</span>
  },
  onSnapComplete: function($el){
    <span class="comment">// after window ($el [jQuery element]) snaps into place</span>
  },
  onWindowEnter: function($el){
    <span class="comment">// when window ($el [jQuery element]) enters viewport</span>
  }
});
&lt;/script&gt;
        </pre>
      </div>
    </section>

    <section class="window">
      <div class="content">
        <h2>api</h2>
        <pre>
<span class="comment">// [jQuery element] current window</span>
$.fn.windows('getCurrentWindow');

<span class="comment">// [bool] whether or not element is visible on screen</span>
$('.window:eq(0)').windows('isOnScreen');

  <span class="comment">// [array of bool]</span>
  $('.window').windows('isOnScreen');

<span class="comment">// [jQuery element from selector] navigates to the next view</span>
<span class="comment">// equivalent to page down, space, or down arrow</span>
$('.window').windows('nextView');

<span class="comment">// [jQuery element from selector] navigates to the previous view</span>
<span class="comment">// equivalent to page up, shift+space, or up arrow</span>
$('.window').windows('prevView');

<span class="comment">// [int] where the view would be scrolled to in order to show the window</span>
$('.window:eq(0)').windows('snapPosition');

  <span class="comment">// [array of int]</span>
  $('.window').windows('snapPosition');
        </pre>
      </div>
    </section>

    <section class="window">
      <div class="content">
        <h2>credits</h2>
        <p>original code and inspiration from <a href="http://nick-jonas.github.io/windows/">@nick-jonas</a></p>
        <p>&nbsp;</p>
        <h2>View on <a href="https://github.com/erdomke/windows">GitHub</a></h2>
      </div>
    </section>
    
    <script src="http://code.jquery.com/jquery-1.10.2.min.js"></script>
    <script src="js/jquery.windows.js"></script>
    
    <script>

      $(document).ready(function(){
        $('.window').windows({
          curtain: true
        });
      });
    </script>

  </body>
</html>